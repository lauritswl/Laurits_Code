max_treedepth = 20
))
ma_m0_pub <- update(
ma_m0_all, newdata = subset(d1, Published == 1))
ma_m0_pubpos <- update(
ma_m0_all, newdata = subset(d1, PublishedPos == 1))
#pp checks of all the models
#all studies
pp_check(
ma_m0_all, ndraws = 100)
#symmetric pubplication bias
pp_check(
ma_m0_pub, ndraws = 100)
#symmetric positive pubblication bias
pp_check(
ma_m0_pubpos, ndraws = 100)
d_real <- readxl::read_excel("Matrix_MetaAnalysis.xlsx")
d_real <- readxl::read_excel("Matrix_MetaAnalysis.xlsx")
View(d_real)
d_real <- readxl::read_excel("Matrix_MetaAnalysis.xlsx")
d_real <- d_real %>%  select(Article:FEMALE_HC,PITCH_F0_HC_M:PITCH_F0_SZ_SD)
d_real <- d_real %>%  select(Title:FEMALE_HC,PITCH_F0_HC_M:PITCH_F0_SZ_SD)
d_real <- readxl::read_excel("Matrix_MetaAnalysis.xlsx")
d_real <- d_real %>%  select(Title:FEMALE_HC,PITCH_F0_HC_M:PITCH_F0_SZ_SD)
EffectMean
```{r}
d_real <- readxl::read_excel("Matrix_MetaAnalysis.xlsx")
d_real <- readxl::read_excel("Matrix_MetaAnalysis.xlsx")
d_real <- d_real %>%  select(Title:FEMALE_HC,PITCH_F0_HC_M:PITCH_F0_SZ_SD,EffectMean)
d_real <- readxl::read_excel("Matrix_MetaAnalysis.xlsx")
d_real <- d_real %>%  select(Title:FEMALE_HC,PITCH_F0_HC_M:PITCH_F0_SZ_SD)
#symmetric positive pubblication bias
pp_check(
ma_m0_pubpos, ndraws = 100)
#symmetric pubplication bias
pp_check(
ma_m0_pub, ndraws = 100)
d_real <- readxl::read_excel("Matrix_MetaAnalysis.xlsx")
d_real <- readxl::read_excel("Matrix_MetaAnalysis.xlsx")
d_real <- d_real %>%  select(Title:FEMALE_HC,PITCH_F0_HC_M:PITCH_F0_SZ_SD,)
d_real <- readxl::read_excel("Matrix_MetaAnalysis.xlsx")
d_real <- d_real %>%  select(Title:FEMALE_HC,PITCH_F0SD_HC_M:PITCH_F0SD_SZ_SD,)
?mutate()
d_real <- d_real %>%  select(Title:FEMALE_HC,PITCH_F0SD_HC_M:PITCH_F0SD_SZ_SD) %>%
mutate("SDpooled" = sqrt((PITCH_F0SD_HC_SD^2 + PITCH_F0SD_SZ_SD^2)/2))
d_real <- readxl::read_excel("Matrix_MetaAnalysis.xlsx")
d_real <- d_real %>%  select(Title:FEMALE_HC,PITCH_F0SD_HC_M:PITCH_F0SD_SZ_SD) %>%
mutate("SD_POOLED" = sqrt((PITCH_F0SD_HC_SD^2 + PITCH_F0SD_SZ_SD^2)/2)) %>%
mutate("EFFECT_SIZE" = (PITCH_F0SD_SZ_M-PITCH_F0SD_HC_M)/SD_POOLED)
#Plot showing mean pitch for both groups
pitch_hc_m <- ggplot(d_real) + geom_histogram(aes(PITCH_F0SD_HC_M), fill = "red", color = "red", alpha = 0.3, bins = 50) + xlab("Pitch control group") + xlim(0,100)
pitch_sz_m <- ggplot(d_real) + geom_histogram(aes(PITCH_F0SD_SZ_M), fill = "green", color = "green", alpha = 0.3, bins = 50)+ xlab("Pitch schizofrenia") + xlim(0,100)
grid.arrange(pitch_hc_m, pitch_sz_m)
pitch_hc_m
pitch_sz_m
grid.arrange(pitch_hc_m, pitch_sz_m)
ggplot::grid.arrange(pitch_hc_m, pitch_sz_m)
ggplot2::grid.arrange(pitch_hc_m, pitch_sz_m)
gridExtra::grid.arrange(pitch_hc_m, pitch_sz_m)
d_real_filter <- d_real %>%  select(Title:FEMALE_HC,PITCH_F0SD_HC_M:PITCH_F0SD_SZ_SD) %>%
mutate("SD_POOLED" = sqrt((PITCH_F0SD_HC_SD^2 + PITCH_F0SD_SZ_SD^2)/2)) %>%
mutate("EFFECT_SIZE" = (PITCH_F0SD_SZ_M-PITCH_F0SD_HC_M)/SD_POOLED)
d_real <- readxl::read_excel("Matrix_MetaAnalysis.xlsx")
d_real_filtered <- d_real %>%  select(Title:FEMALE_HC,PITCH_F0SD_HC_M:PITCH_F0SD_SZ_SD) %>% #Selecting relevant datacollumns
mutate("SD_POOLED" = sqrt((PITCH_F0SD_HC_SD^2 + PITCH_F0SD_SZ_SD^2)/2)) %>% #Creating SD_pooled
mutate("EFFECT_SIZE" = (PITCH_F0SD_SZ_M-PITCH_F0SD_HC_M)/SD_POOLED) #Creating Effect_size collumn
d_real_filtered <- d_real %>%  select(Title:FEMALE_HC,PITCH_F0SD_HC_M:PITCH_F0SD_SZ_SD) %>% #Selecting relevant datacollumns
mutate("SD_POOLED" = sqrt((PITCH_F0SD_HC_SD^2 + PITCH_F0SD_SZ_SD^2)/2)) %>% #Creating SD_pooled
mutate("EFFECT_SIZE" = (PITCH_F0SD_SZ_M-PITCH_F0SD_HC_M)/SD_POOLED) %>%  #Creating Effect_size collumn
filter(EFFECT_SIZE != NA)
View(d_real_filter)
View(d_real_filtered)
d_real_filtered <- d_real %>%  select(Title:FEMALE_HC,PITCH_F0SD_HC_M:PITCH_F0SD_SZ_SD) %>% #Selecting relevant datacollumns
mutate("SD_POOLED" = sqrt((PITCH_F0SD_HC_SD^2 + PITCH_F0SD_SZ_SD^2)/2)) %>% #Creating SD_pooled
mutate("EFFECT_SIZE" = (PITCH_F0SD_SZ_M-PITCH_F0SD_HC_M)/SD_POOLED) %>%  #Creating Effect_size collumn
filter(EFFECT_SIZE != NA)
?filter()
d_real_filtered <- d_real %>%  select(Title:FEMALE_HC,PITCH_F0SD_HC_M:PITCH_F0SD_SZ_SD) %>% #Selecting relevant datacollumns
mutate("SD_POOLED" = sqrt((PITCH_F0SD_HC_SD^2 + PITCH_F0SD_SZ_SD^2)/2)) %>% #Creating SD_pooled
mutate("EFFECT_SIZE" = (PITCH_F0SD_SZ_M-PITCH_F0SD_HC_M)/SD_POOLED) %>%  #Creating Effect_size collumn
filter(EFFECT_SIZE != NA)
d_real_filtered <- d_real %>%  select(Title:FEMALE_HC,PITCH_F0SD_HC_M:PITCH_F0SD_SZ_SD) %>% #Selecting relevant datacollumns
mutate("SD_POOLED" = sqrt((PITCH_F0SD_HC_SD^2 + PITCH_F0SD_SZ_SD^2)/2)) %>% #Creating SD_pooled
mutate("EFFECT_SIZE" = (PITCH_F0SD_SZ_M-PITCH_F0SD_HC_M)/SD_POOLED) %>%  #Creating Effect_size collumn
filter(EFFECT_SIZE != EFFECT_SIZE$NA)
d_real_filtered <- d_real %>%  select(Title:FEMALE_HC,PITCH_F0SD_HC_M:PITCH_F0SD_SZ_SD) %>% #Selecting relevant datacollumns
mutate("SD_POOLED" = sqrt((PITCH_F0SD_HC_SD^2 + PITCH_F0SD_SZ_SD^2)/2)) %>% #Creating SD_pooled
mutate("EFFECT_SIZE" = (PITCH_F0SD_SZ_M-PITCH_F0SD_HC_M)/SD_POOLED) %>%  #Creating Effect_size collumn
filter(is.na(EFFECT_SIZE) != TRUE)
View(d_real_filtered)
d_real <- readxl::read_excel("Matrix_MetaAnalysis.xlsx")
knitr::opts_chunk$set(echo = TRUE)
#Installing packages and setting seed for repreoducability
pacman::p_load(tidyverse, brms, bayesplot, rstanarm, msm, cmdstanr, gridExtra)
set.seed(123)
#parameter identification
EffectMean <- 0.4
StudySD <- 0.4
Error <- 0.8
#specifying number of studies
Studies <- 100
n_participants <- 20
n_participants_sd <- 10
min_participants <- 10
#simulating 100 studies
d <- tibble(
Study = seq(Studies),
Participants = round(msm::rtnorm(Studies, n_participants, n_participants_sd, lower = min_participants), 0),
StudyEffect = NA,
EffectMu = NA,
EffectError = NA
)
#simulating parameters for each study
for (i in seq(Studies)){
d$StudyEffect[i] <- rnorm(1, EffectMean, StudySD)
sampling <- rnorm(d$Participants[i], d$StudyEffect[i], Error)
d$EffectMu[i] <- mean(sampling)
d$EffectError[i] <- sd(sampling)/sqrt(d$Participants[i])
}
#setting priors
ma_p0 <- c(
prior(normal(0, 0.3), class = Intercept),
prior(normal(0, 0.3), class = sd))
ma_p1 <- c(
prior(normal(0, 0.3), class = Intercept),
prior(normal(0, 0.3), class = sd))
#setting models
ma_f0 <- bf(EffectMu | se(EffectError) ~ 1 + (1|Study))
#getting priors for the models
#priors for ma_f0
get_prior(ma_f0,
data = d,
family = gaussian)
#running the models
ma_m0_prior <- brm(
ma_f0,
data = d,
family = gaussian,
prior = ma_p0,
sample_prior = "only",
backend = "cmdstanr",
threads = threading(2),
chains = 2,
cores = 4,
control = list(
adapt_delta = 0.9,
max_treedepth = 20))
#symmetric prior bias
pp_check(
ma_m0_prior, ndraws = 100)
#including publication bias
d1 <- d %>% mutate(
Published = NA,
PublishedPos = NA)
#loops through all the studies
for (i in seq(Studies)){
#checks if the absolute value of the specific study's effectMU minus two standard
#deviations is above 0. If it is there is a 95% chance that the study is published, if not       only a 5% chance of being published.
d1$Published[i] <- ifelse(
abs(d$EffectMu[i]) - (2*d$EffectError[i]) > 0,
rbinom(1, 1, .9), rbinom(1, 1, .1))
d1$PublishedPos[i] <- ifelse(
#does the same as the above ifelse function but the study's effectMU also has to be             #positive.
abs(d$EffectMu[i]) - (2*d$EffectError[i]) > 0 & d$EffectMu[i] > 0,
rbinom(1, 1, .9), rbinom(1, 1, .1))
}
#updating the models
ma_m0_all <- brm(
ma_f0,
data = d1,
save_pars = save_pars(all = T),
family = gaussian,
prior = ma_p0,
sample_prior = T,
backend = "cmdstanr",
threads = threading(2),
chains = 2,
cores = 4,
control = list(
adapt_delta = 0.9,
max_treedepth = 20
))
ma_m0_pub <- update(
ma_m0_all, newdata = subset(d1, Published == 1))
ma_m0_pubpos <- update(
ma_m0_all, newdata = subset(d1, PublishedPos == 1))
#pp checks of all the models
#all studies
pp_check(
ma_m0_all, ndraws = 100)
#symmetric pubplication bias
pp_check(
ma_m0_pub, ndraws = 100)
#symmetric positive pubblication bias
pp_check(
ma_m0_pubpos, ndraws = 100)
posterior_prior <- as_draws_df(ma_m0_all)
posterior_pub <- as_draws_df(ma_m0_pub)
posterior_pubpos <- as_draws_df(ma_m0_pubpos)
p1 <- ggplot(posterior_prior) + geom_histogram(aes(b_Intercept), fill = "red", color = "red", alpha = 0.3, bins = 50) + xlab("Prior-posterior") + xlim(0,0.8)
p2 <- ggplot(posterior_pub) + geom_histogram(aes(b_Intercept), fill = "yellow", color = "yellow", alpha = 0.3, bins = 50) + xlab("Posterior with publication bias")+ xlim(0,0.8)
p3 <- ggplot(posterior_pubpos) + geom_histogram(aes(b_Intercept), fill = "green", color = "green", alpha = 0.3, bins = 50)+ xlab("Posterior with positive publication bias")+ xlim(0,0.8)
gridExtra::grid.arrange(p1, p2, p3)
d_real <- readxl::read_excel("Matrix_MetaAnalysis.xlsx")
paste0("The number of studies is ", length(unique(d_real$Title)))
paste0("There is ", length(d_real$Title) -length(unique(d_real$Title)), " data entries from the same studies")
d_real_filtered <- d_real %>%  select(Title:FEMALE_HC,PITCH_F0SD_HC_M:PITCH_F0SD_SZ_SD) %>% #Selecting relevant datacollumns
mutate("SD_POOLED" = sqrt((PITCH_F0SD_HC_SD^2 + PITCH_F0SD_SZ_SD^2)/2)) %>% #Creating SD_pooled
mutate("EFFECT_SIZE" = (PITCH_F0SD_SZ_M-PITCH_F0SD_HC_M)/SD_POOLED) %>%  #Creating Effect_size collumn
filter(is.na(EFFECT_SIZE) != TRUE & MALE_SZ != "NR") #Filter NA away
#Creating column with effect error
d_real_filtered[6:9] <- sapply(d_real_filtered[6:9], as.numeric)
d_real_filtered <- d_real_filtered %>%
mutate("Pitch_SD" = (PITCH_F0SD_HC_SD+PITCH_F0SD_SZ_SD)/2, "N_participants" = MALE_SZ + FEMALE_SZ + MALE_HC + FEMALE_HC)
d_real_filtered <- d_real_filtered %>%
mutate("EFFECT_ERROR" = Pitch_SD/sqrt(N_participants))
#transforming the participant coloumns in order to plot them
d_real_graph <- d_real_filtered[-4,]
d_real_graph <- d_real_graph %>%
mutate(
n_participants_sz = FEMALE_SZ + MALE_SZ,
n_participants_hc = FEMALE_HC + MALE_HC,
sz_mean = round(mean(n_participants_sz),0),
hc_mean =round(mean(n_participants_hc),0)
)
#plotting the number of participants per study for the HC and SZ
d_real_graph %>%
ggplot() +
geom_density(aes(n_participants_sz), alpha = .2, color = "red") +
geom_density(aes(n_participants_hc), alpha = .2, color = "green") +
geom_vline(xintercept = d_real_graph$sz_mean, linetype = "dashed", color = "red") +
geom_vline(xintercept = d_real_graph$hc_mean, linetype = "dashed", color = "green") +
labs(title = "Overall number of HC and SZ participants", subtitle = "Lines indicating mean of participant type") +
xlab("Number of participants") +
scale_x_continuous(breaks = scales::pretty_breaks(n = 15)) +
theme_minimal()+ scale_fill_manual(name = "Participant type", values = c(SZ = "red", HC = "green"))
d_real_graph %>%
ggplot(aes(x = ID)) +
geom_point(aes(y =n_participants_sz), color = "red") +
geom_point(aes(y =n_participants_hc), color = "green") +
labs(title = "Comparison of number of HC and SZ participants", subtitle = "Green indicating HC, Red indicating SZ") +
ylab("Number of participants") +
scale_y_continuous(breaks = scales::pretty_breaks(n = 15))+
scale_x_continuous(breaks = scales::pretty_breaks(n = 13))+ theme_minimal() + scale_fill_manual(name = "Participant type", values = c(SZ = "red", HC = "green"))
View(d_real)
View(d_real_graph)
View(d_real)
d_real_graph %>%
ggplot(aes(x = ID)) +
geom_point(aes(y =n_participants_sz), color = "red") +
geom_point(aes(y =n_participants_hc), color = "green") +
labs(title = "Comparison of number of HC and SZ participants", subtitle = "Green indicating HC, Red indicating SZ") +
ylab("Number of participants") +
scale_y_continuous(breaks = scales::pretty_breaks(n = 15))+
scale_x_continuous(breaks = scales::pretty_breaks(n = 13))+ theme_minimal() + scale_fill_manual(name = "Participant type", values = c(SZ = "red", HC = "green"))
d_real_graph %>%
ggplot(aes(x = Title)) +
geom_point(aes(y =n_participants_sz), color = "red") +
geom_point(aes(y =n_participants_hc), color = "green") +
labs(title = "Comparison of number of HC and SZ participants", subtitle = "Green indicating HC, Red indicating SZ") +
ylab("Number of participants") +
scale_y_continuous(breaks = scales::pretty_breaks(n = 15))+
scale_x_continuous(breaks = scales::pretty_breaks(n = 13))+ theme_minimal() + scale_fill_manual(name = "Participant type", values = c(SZ = "red", HC = "green"))
d_real_graph %>%
ggplot(aes(x = id)) +
geom_point(aes(y =n_participants_sz), color = "red") +
geom_point(aes(y =n_participants_hc), color = "green") +
labs(title = "Comparison of number of HC and SZ participants", subtitle = "Green indicating HC, Red indicating SZ") +
ylab("Number of participants") +
scale_y_continuous(breaks = scales::pretty_breaks(n = 15))+
scale_x_continuous(breaks = scales::pretty_breaks(n = 13))+ theme_minimal() + scale_fill_manual(name = "Participant type", values = c(SZ = "red", HC = "green"))
d_real_filtered <- d_real_filtered %>%  mutate(ID = "")
View(d_real_filtered)
d_real_filtered <- d_real_filtered %>%  mutate(ID = id)
View(d_real_filtered)
d_real_filtered <- tibble::rowid_to_column(d_real_graph,"ID")
d_real_graph %>%
ggplot(aes(x = ID)) +
geom_point(aes(y =n_participants_sz), color = "red") +
geom_point(aes(y =n_participants_hc), color = "green") +
labs(title = "Comparison of number of HC and SZ participants", subtitle = "Green indicating HC, Red indicating SZ") +
ylab("Number of participants") +
scale_y_continuous(breaks = scales::pretty_breaks(n = 15))+
scale_x_continuous(breaks = scales::pretty_breaks(n = 13))+ theme_minimal() + scale_fill_manual(name = "Participant type", values = c(SZ = "red", HC = "green"))
d_real_graph %>%
ggplot(aes(x = Index)) +
geom_point(aes(y =n_participants_sz), color = "red") +
geom_point(aes(y =n_participants_hc), color = "green") +
labs(title = "Comparison of number of HC and SZ participants", subtitle = "Green indicating HC, Red indicating SZ") +
ylab("Number of participants") +
scale_y_continuous(breaks = scales::pretty_breaks(n = 15))+
scale_x_continuous(breaks = scales::pretty_breaks(n = 13))+ theme_minimal() + scale_fill_manual(name = "Participant type", values = c(SZ = "red", HC = "green"))
#transforming the participant coloumns in order to plot them
d_real_graph <- d_real_filtered[-4,]
d_real_filtered <- tibble::rowid_to_column(d_real_graph,"Index")
d_real_graph <- d_real_graph %>%
mutate(
n_participants_sz = FEMALE_SZ + MALE_SZ,
n_participants_hc = FEMALE_HC + MALE_HC,
sz_mean = round(mean(n_participants_sz),0),
hc_mean =round(mean(n_participants_hc),0)
)
#plotting the number of participants per study for the HC and SZ
d_real_graph %>%
ggplot() +
geom_density(aes(n_participants_sz), alpha = .2, color = "red") +
geom_density(aes(n_participants_hc), alpha = .2, color = "green") +
geom_vline(xintercept = d_real_graph$sz_mean, linetype = "dashed", color = "red") +
geom_vline(xintercept = d_real_graph$hc_mean, linetype = "dashed", color = "green") +
labs(title = "Overall number of HC and SZ participants", subtitle = "Lines indicating mean of participant type") +
xlab("Number of participants") +
scale_x_continuous(breaks = scales::pretty_breaks(n = 15)) +
theme_minimal()+ scale_fill_manual(name = "Participant type", values = c(SZ = "red", HC = "green"))
d_real_graph %>%
ggplot(aes(x = Index)) +
geom_point(aes(y =n_participants_sz), color = "red") +
geom_point(aes(y =n_participants_hc), color = "green") +
labs(title = "Comparison of number of HC and SZ participants", subtitle = "Green indicating HC, Red indicating SZ") +
ylab("Number of participants") +
scale_y_continuous(breaks = scales::pretty_breaks(n = 15))+
scale_x_continuous(breaks = scales::pretty_breaks(n = 13))+ theme_minimal() + scale_fill_manual(name = "Participant type", values = c(SZ = "red", HC = "green"))
d_real_graph %>%
ggplot(aes(x = ID)) +
geom_point(aes(y =n_participants_sz), color = "red") +
geom_point(aes(y =n_participants_hc), color = "green") +
labs(title = "Comparison of number of HC and SZ participants", subtitle = "Green indicating HC, Red indicating SZ") +
ylab("Number of participants") +
scale_y_continuous(breaks = scales::pretty_breaks(n = 15))+
scale_x_continuous(breaks = scales::pretty_breaks(n = 13))+ theme_minimal() + scale_fill_manual(name = "Participant type", values = c(SZ = "red", HC = "green"))
d_real_graph %>%
ggplot(aes(x = ID)) +
geom_point(aes(y =n_participants_sz), color = "red") +
geom_point(aes(y =n_participants_hc), color = "green") +
labs(title = "Comparison of number of HC and SZ participants", subtitle = "Green indicating HC, Red indicating SZ") +
ylab("Number of participants") +
scale_y_continuous(breaks = scales::pretty_breaks(n = 15))+
scale_x_continuous(breaks = scales::pretty_breaks(n = 13))+ theme_minimal() + scale_fill_manual(name = "Participant type", values = c(SZ = "red", HC = "green"))
#plotting the number of participants per study for the HC and SZ
d_real_graph %>%
ggplot() +
geom_density(aes(n_participants_sz), alpha = .2, color = "red") +
geom_density(aes(n_participants_hc), alpha = .2, color = "green") +
geom_vline(xintercept = d_real_graph$sz_mean, linetype = "dashed", color = "red") +
geom_vline(xintercept = d_real_graph$hc_mean, linetype = "dashed", color = "green") +
labs(title = "Overall number of HC and SZ participants", subtitle = "Lines indicating mean of participant type") +
xlab("Number of participants") +
scale_x_continuous(breaks = scales::pretty_breaks(n = 15)) +
theme_minimal()+ scale_fill_manual(name = "Participant type", values = c(SZ = "red", HC = "green"))
#transforming the participant coloumns in order to plot them
d_real_graph <- d_real_filtered[-4,]
d_real_graph <- d_real_graph %>%
mutate(
n_participants_sz = FEMALE_SZ + MALE_SZ,
n_participants_hc = FEMALE_HC + MALE_HC,
sz_mean = round(mean(n_participants_sz),0),
hc_mean =round(mean(n_participants_hc),0)
)
#plotting the number of participants per study for the HC and SZ
d_real_graph %>%
ggplot() +
geom_density(aes(n_participants_sz), alpha = .2, color = "red") +
geom_density(aes(n_participants_hc), alpha = .2, color = "green") +
geom_vline(xintercept = d_real_graph$sz_mean, linetype = "dashed", color = "red") +
geom_vline(xintercept = d_real_graph$hc_mean, linetype = "dashed", color = "green") +
labs(title = "Overall number of HC and SZ participants", subtitle = "Lines indicating mean of participant type") +
xlab("Number of participants") +
scale_x_continuous(breaks = scales::pretty_breaks(n = 15)) +
theme_minimal()+ scale_fill_manual(name = "Participant type", values = c(SZ = "red", HC = "green"))
d_real_graph %>%
ggplot(aes(x = ID)) +
geom_point(aes(y =n_participants_sz), color = "red") +
geom_point(aes(y =n_participants_hc), color = "green") +
labs(title = "Comparison of number of HC and SZ participants", subtitle = "Green indicating HC, Red indicating SZ") +
ylab("Number of participants") +
scale_y_continuous(breaks = scales::pretty_breaks(n = 15))+
scale_x_continuous(breaks = scales::pretty_breaks(n = 13))+ theme_minimal() + scale_fill_manual(name = "Participant type", values = c(SZ = "red", HC = "green"))
#Plot showing mean pitch for both groups
pitch_hc_m <- ggplot(d_real_filtered) + geom_histogram(aes(PITCH_F0SD_HC_M), fill = "red", color = "red", alpha = 0.3, bins = 50) + xlab("Mean pitch control group") + xlim(0,85)
pitch_sz_m <- ggplot(d_real_filtered) + geom_histogram(aes(PITCH_F0SD_SZ_M), fill = "green", color = "green", alpha = 0.3, bins = 50)+ xlab("Mean pitch schizofrenia") + xlim(0,85)
gridExtra::grid.arrange(pitch_hc_m, pitch_sz_m)
View(d_real_filtered)
#transforming the participant coloumns in order to plot them
d_real_graph <- d_real_filtered[-4,]
View(d_real_filtered)
#Creating column with effect error
d_real_filtered[6:9] <- sapply(d_real_filtered[6:9], as.numeric)
d_real_filtered <- d_real_filtered %>%
mutate("Pitch_SD" = (PITCH_F0SD_HC_SD+PITCH_F0SD_SZ_SD)/2, "N_participants" = MALE_SZ + FEMALE_SZ + MALE_HC + FEMALE_HC)
d_real_filtered <- d_real_filtered %>%
mutate("EFFECT_ERROR" = Pitch_SD/sqrt(N_participants))
View(d_real_filtered)
d_real <- readxl::read_excel("Matrix_MetaAnalysis.xlsx")
paste0("The number of studies is ", length(unique(d_real$Title)))
paste0("There is ", length(d_real$Title) -length(unique(d_real$Title)), " data entries from the same studies")
d_real_filtered <- d_real %>%  select(Title:FEMALE_HC,PITCH_F0SD_HC_M:PITCH_F0SD_SZ_SD) %>% #Selecting relevant datacollumns
mutate("SD_POOLED" = sqrt((PITCH_F0SD_HC_SD^2 + PITCH_F0SD_SZ_SD^2)/2)) %>% #Creating SD_pooled
mutate("EFFECT_SIZE" = (PITCH_F0SD_SZ_M-PITCH_F0SD_HC_M)/SD_POOLED) %>%  #Creating Effect_size collumn
filter(is.na(EFFECT_SIZE) != TRUE & MALE_SZ != "NR") #Filter NA away
#Creating column with effect error
d_real_filtered[6:9] <- sapply(d_real_filtered[6:9], as.numeric)
d_real_filtered <- d_real_filtered %>%
mutate("Pitch_SD" = (PITCH_F0SD_HC_SD+PITCH_F0SD_SZ_SD)/2, "N_participants" = MALE_SZ + FEMALE_SZ + MALE_HC + FEMALE_HC)
d_real_filtered <- d_real_filtered %>%
mutate("EFFECT_ERROR" = Pitch_SD/sqrt(N_participants))
#transforming the participant coloumns in order to plot them
d_real_graph <- d_real_filtered[-4,]
d_real_graph <- d_real_graph %>%
mutate(
n_participants_sz = FEMALE_SZ + MALE_SZ,
n_participants_hc = FEMALE_HC + MALE_HC,
sz_mean = round(mean(n_participants_sz),0),
hc_mean =round(mean(n_participants_hc),0)
)
#plotting the number of participants per study for the HC and SZ
d_real_graph %>%
ggplot() +
geom_density(aes(n_participants_sz), alpha = .2, color = "red") +
geom_density(aes(n_participants_hc), alpha = .2, color = "green") +
geom_vline(xintercept = d_real_graph$sz_mean, linetype = "dashed", color = "red") +
geom_vline(xintercept = d_real_graph$hc_mean, linetype = "dashed", color = "green") +
labs(title = "Overall number of HC and SZ participants", subtitle = "Lines indicating mean of participant type") +
xlab("Number of participants") +
scale_x_continuous(breaks = scales::pretty_breaks(n = 15)) +
theme_minimal()+ scale_fill_manual(name = "Participant type", values = c(SZ = "red", HC = "green"))
d_real_graph %>%
ggplot(aes(x = ID)) +
geom_point(aes(y =n_participants_sz), color = "red") +
geom_point(aes(y =n_participants_hc), color = "green") +
labs(title = "Comparison of number of HC and SZ participants", subtitle = "Green indicating HC, Red indicating SZ") +
ylab("Number of participants") +
scale_y_continuous(breaks = scales::pretty_breaks(n = 15))+
scale_x_continuous(breaks = scales::pretty_breaks(n = 13))+ theme_minimal() + scale_fill_manual(name = "Participant type", values = c(SZ = "red", HC = "green"))
View(d_real_filtered)
d_real_graph <- d_real_graph %>%
mutate(
n_participants_sz = FEMALE_SZ + MALE_SZ,
n_participants_hc = FEMALE_HC + MALE_HC,
sz_mean = round(mean(n_participants_sz),0),
hc_mean =round(mean(n_participants_hc),0)
) %>%
rowid_to_column(ID)
#transforming the participant coloumns in order to plot them
d_real_graph <- d_real_filtered[-4,]
d_real_graph <- d_real_graph %>%
mutate(
n_participants_sz = FEMALE_SZ + MALE_SZ,
n_participants_hc = FEMALE_HC + MALE_HC,
sz_mean = round(mean(n_participants_sz),0),
hc_mean =round(mean(n_participants_hc),0)
) %>%
rowid_to_column("ID")
#plotting the number of participants per study for the HC and SZ
d_real_graph %>%
ggplot() +
geom_density(aes(n_participants_sz), alpha = .2, color = "red") +
geom_density(aes(n_participants_hc), alpha = .2, color = "green") +
geom_vline(xintercept = d_real_graph$sz_mean, linetype = "dashed", color = "red") +
geom_vline(xintercept = d_real_graph$hc_mean, linetype = "dashed", color = "green") +
labs(title = "Overall number of HC and SZ participants", subtitle = "Lines indicating mean of participant type") +
xlab("Number of participants") +
scale_x_continuous(breaks = scales::pretty_breaks(n = 15)) +
theme_minimal()+ scale_fill_manual(name = "Participant type", values = c(SZ = "red", HC = "green"))
d_real_graph %>%
ggplot(aes(x = ID)) +
geom_point(aes(y =n_participants_sz), color = "red") +
geom_point(aes(y =n_participants_hc), color = "green") +
labs(title = "Comparison of number of HC and SZ participants", subtitle = "Green indicating HC, Red indicating SZ") +
ylab("Number of participants") +
scale_y_continuous(breaks = scales::pretty_breaks(n = 15))+
scale_x_continuous(breaks = scales::pretty_breaks(n = 13))+ theme_minimal() + scale_fill_manual(name = "Participant type", values = c(SZ = "red", HC = "green"))
#Plot showing mean pitch for both groups
pitch_hc_m <- ggplot(d_real_filtered) + geom_histogram(aes(PITCH_F0SD_HC_M), fill = "red", color = "red", alpha = 0.3, bins = 50) + xlab("Mean pitch control group") + xlim(0,85)
pitch_sz_m <- ggplot(d_real_filtered) + geom_histogram(aes(PITCH_F0SD_SZ_M), fill = "green", color = "green", alpha = 0.3, bins = 50)+ xlab("Mean pitch schizofrenia") + xlim(0,85)
gridExtra::grid.arrange(pitch_hc_m, pitch_sz_m)
View(d_real_graph)
#Plot showing pitch standard deviation for both groups
pitch_hc_sd <- ggplot(d_real_filtered) + geom_histogram(aes(PITCH_F0SD_HC_SD), fill = "red", color = "red", alpha = 0.3, bins = 50) + xlab("Pitch standard deviation control group") + xlim(0,50)
pitch_sz_sd <- ggplot(d_real_filtered) + geom_histogram(aes(PITCH_F0SD_SZ_SD), fill = "green", color = "green", alpha = 0.3, bins = 50)+ xlab("Pitch  standard deviation schizofrenia") + xlim(0,50)
gridExtra::rid.arrange(pitch_hc_sd, pitch_sz_sd)
#Plot showing pitch standard deviation for both groups
pitch_hc_sd <- ggplot(d_real_filtered) + geom_histogram(aes(PITCH_F0SD_HC_SD), fill = "red", color = "red", alpha = 0.3, bins = 50) + xlab("Pitch standard deviation control group") + xlim(0,50)
pitch_sz_sd <- ggplot(d_real_filtered) + geom_histogram(aes(PITCH_F0SD_SZ_SD), fill = "green", color = "green", alpha = 0.3, bins = 50)+ xlab("Pitch  standard deviation schizofrenia") + xlim(0,50)
gridExtra::rid.arrange(pitch_hc_sd, pitch_sz_sd)
gridExtra::grid.arrange(pitch_hc_sd, pitch_sz_sd)
ma_f0_real <- bf(EFFECT_SIZE | se(EFFECT_ERROR) ~ 1 + (1 | Title) )
get_prior(ma_f0_real,
data = d_real_filtered,
family = gaussian)
ma_real <- brm(
ma_f0_real,
data = d_real_filtered,
save_pars = save_pars(all = T),
family = gaussian,
prior = ma_p0,
sample_prior = T,
backend = "cmdstanr",
threads = threading(2),
chains = 2,
cores = 4,
control = list(
adapt_delta = 0.9,
max_treedepth = 20
))
pp_check(ma_real, ndraws=100)
View(pitch_sz_m)
View(d_real)
View(d_real_filtered)
View(d_real_graph)
summary(ma_real)
plot(ma_real)
summary(ma_real)
plot(ma_real)
